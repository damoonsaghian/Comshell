= command based user interface
command based user interfaces (using keyboard, voice, gesture) are
  faster, more convenient and more powerful;
  than pointer based user interfaces (using mouse, touch, pen)
with simple uniform GUI, there is no need for a pointer based user interface;

touch interfaces can still be useful in simple limited applications
also for some special artistic applications, pen input remains the only choice;
touch interface may seem very convenient at first sight,
  especially if accompanied with the power of gestures;
but the problem is the form'factor:
 since interaction at a distance is not possible, one must always carry the whole system;

detection of voice commands is a relatively simple process (compared to general speech recognition),
  because we only need to match against a relatively small set of commands;
a headset with near range microphone can be used, to exclude far away sound sources;
  also it is better to put battery and transmitter of the headset in a separate unit,
    that can be put in the pocket;
  this makes the headset lighter and safer;
for those who neither can use all their fingers, nor can talk,
  gesture based (2d) input can be implemented;

".data/keyboard.png"
, two commas -> ;
, ";" followed by comma -> .
, comma followed by apostrophe -> "
, comma followed by "(" -> [
, ";" followed by "(" -> {
, comma followed by "c" followed by space -> : (followed by space)
, comma followed by "psi" followed by comma -> Ïˆ
, "a" then two apostrophes -> A
, two apostrophe then "abc" then space or comma -> ABC (followed by space or comma)
"https://github.com/adereth/dactyl-keyboard"
"https://ergodox-ez.com/pages/change-it-yourself"
"https://shop.keyboard.io/"
Kinesis Advantage 2 keyboard
"https://github.com/nicinabox/lets-split-guide"
"http://www.allthingsergo.com/the-best-ergonomic-mechanical-keyboards/"

= Comshell
Comshell is a unified computing environment, utilizing command based user interface;

projects are directories inside "~/projects/";
list of all projects will appear in a floating layer, at the center of screen;
list of all files in the project will be displayed in a tree'view at the left;
we can have views of different locations in a project (even of the same file) in separate tabs;

text files will be opened in a text editor;
directories containing a file named ".gallery" will be opened in a view showing thumbnails;

files and directories with names starting with a dot, will be hidden;
".cache" directory inside a project is for files we don't want to share or backup;

non'local projects, web pages, PDF documents, etc,
  accessed from links inside the main project, will be opened in a floating layer;
web pages:
, move caret between visual objects (ignoring structural objects);
, or use hinting for text input and other widgets, text and other elements like images and videos;

projects in external disks (inside a root directory named "projects"),
  can be accessed from a floating list view;

at the bottom, there is a status'bar showing messages at the left, and system status at the right;
system status: network, CPU and RAM usage, year-month-day week'day AM/PM hour:minute

modal key'bindings;
modes (like normal mode and insert mode) must be visually distinctive;
press "escape" to go back to normal mode;
in normal mode we can:
, move the cursor to the next or previous character or word;
, move the cursor to the next or previous lines or table cells;
, move the cursor to the next or previous paragraph;
, start and end selection, then copy or cut;
, paste
, undo, redo
, find
, enter insert mode;

double space: creating tables
auto'completion is done (after typing "space") only where there must be a predefined name;
list of available names will be displayed in a list at the right;
