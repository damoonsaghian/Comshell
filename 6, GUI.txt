implementing a complete GUI toolkit is a lot of work;
existing ones (like GTK) are single threaded;
thus we can't access GTK widgets (and data structures containing them), from inside actors;
solution:
"https://gtk-rs.org/docs/glib/source/fn.idle_add.html"
"https://docs.rs/fragile/1.0.0/fragile/struct.Fragile.html"
"https://docs.rs/send_wrapper/0.4.0/send_wrapper/"
we deal with Gobjects by wrapping them in a Gsend;
Gsend embeds a Fragile which will be created in the GTK main thread (using "idle_add"),
  and then received (and put inside the Gsend) using a channel;
Gsend.new gets a closure (instead of a Gobject value);
  the closure's return type is the type of the specific Gobject;

another problem with GTK is its lack of features;
  for example the SourceView widget lacks indent guides;
so i'm not sure, maybe it's better to implement a GUI library, based on actors, from scratch;
"https://github.com/kas-gui/kas"
"https://github.com/Julusian/rust-cef"
  "https://github.com/jamethy/sdl2-cef"
  "https://github.com/cztomczak/cefpython"
FFMPEG

;sh
curl --proto '=https' -sSf -o comshell.zip https://github.com/damoonsaghian/Comshell/archive/master.zip
unzip comshell.zip -d Comshell
cd Comshell

cargo build --release
pkexec cp .cache/target/release/comshell /usr/local/bin/

printf '[Desktop Entry]\nName=Comshell\nExec=comshell\nIcon=computer\nType=Application' >
  ~/.config/autostart/comshell.desktop
pkexec cp ~/.config/autostart/comshell.desktop /etc/skel/.config/autostart/
pkexec cp ~/.config/autostart/comshell.desktop /usr/local/share/applications/
;
