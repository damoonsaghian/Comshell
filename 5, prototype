implementing a complete GUI toolkit is a huge lot of work;
existing ones (like GTK) are single threaded, thus we can't create actors from them;
so although we can access actors from GTK main loop,
  we can't access GTK widgets (and structure containing them), from actors;
thus we either must write traditional single threaded code, without actors,
  or use a trick to access non_send data, in other threads:
  "https://github.com/Phaiax/gtk-rs-state";

considering these and other complexities in the design of traditional toolkits,
  i think it's better to first build a prototype of Comshell, using LGI;

"https://github.com/pavouk/lgi"
"https://github.com/pavouk/lgi/tree/master/docs"
"https://github.com/pavouk/lgi/tree/master/samples"
"https://developer.gnome.org/gnome-devel-demos/stable/js.html.en"
"https://python-gtk-3-tutorial.readthedocs.io/en/latest/introduction.html"

"https://developer.gnome.org/references"
"https://gjs-docs.gnome.org/"

"https://stackoverflow.com/questions/23433819/creating-a-simple-file-browser-using-python-and-gtktreeview"
"https://github.com/teejee2008/polo"
"https://github.com/UberWriter/uberwriter"
"https://github.com/zim-desktop-wiki/zim-desktop-wiki"
"https://github.com/karlch/vimiv"
"https://www.archlinux.org/packages/extra/any/meld/"
"https://www.archlinux.org/packages/community/any/lollypop/"
"https://www.archlinux.org/packages/community/any/quodlibet/"
"https://gitlab.gnome.org/GNOME/pitivi"
"https://www.archlinux.org/packages/community/any/gaupol/"

"https://github.com/wu-lang/wu"

; sudo pacman -S lua-lgi gtksourceview4 webkit2gtk gst-plugins-{base,good,bad} gst-libav \
  materia-gtk-theme

; mkdir -p ~/.comshell-proto
; cp prototype/*.lua ~/.comshell-proto/

; mkdir -p ~/.config/sway
; cp prototype/sway.config ~/.config/sway/config
; nano ~/.bash_profile
  if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
    sway
  fi

; mkdir -p ~/.config/gtk-3.0
; nano ~/.config/gtk-3.0/settings.ini
  [Settings]
  gtk-theme-name = Materia-light-compact
  gtk-font-name = Sans
; cp prototype/gtk.css ~/.config/gtk-3.0/gtk.css
