SFTP:
, create a user with a temporary password;
, login, then disable multi login;
, reset ssh;
, login;
, make a homepage;
, put the fingerprint in "ssh_fingerprint.txt";
, change password;
, logout
, each time before login download the ssh key fingerprint, and append it to "~/.ssh/known_hosts";

index file:
".cache/sync/index"
entries are separated with empty lines;
each entry has 3 lines:
1, path
2, modification time
3, hash

".cache/messages/"

sync up:
, create a snapshot of the project in ".cache/sync/snapshot/";
  snapshots are used to always have a consistent destination;
, put all files at root and use their hashes for the file names;
  if the file's modification time is the same as the one in the index file,
  take the hash from the index file, otherwise calculate the hash;
, create new index file, inside the snapshot;
, sync the snapshot to remote, using LFTP;
, delete the snapshot;

sync down:
, create a snapshot of the project in ".cache/sync/snapshot/";
  snapshots are used to always have a consistent destination;
, put all files at root and use their hashes for the file names;
  if the file's modification time is the same as the one in the index file,
  take the hash from the index file, otherwise calculate the hash;
, sync the remote to snapshot, using LFTP;
, if the downloaded files are inconsistent with the index files, sync again and again;
, move the index file to ".cache/sync/index" (inside the snapshot);
, rename the files in the snapshot to the paths mentioned in the index file;
, move the snapshot to the destination;

files in ".cache" directory will not be synced;
so build directories must be put inside ".cache"; eg for Rust:
; nano ~/.cargo/config
  [build]
  target-dir = ".cache/cargo"
