the problem of shared mutable data is so pervasive in the computing world;
we can also see it in file synchronization tools like Git:
, there can be conflicts when pushing or pulling, that must be resolved manually;
, the history just grows indefinitely cause change in the history of the repository can be catastrophic;

solution:
only the owner can mutate the repository;
each file or directory can have an owner;
owner can mutably borrow its content for a defined duration, or move ownership;
others have to send messages:
, in the form of to_dos define by the owner;
, corrections

immutable repositories can apply corrections and to_dos, and test them,
  but they can't push it to remote, only the owner can;
automatic sync at the immutable ends;
sync before sending to_dos or corrections;

Rclone is the only option which:
, provides file synchronization (as opposed to backup tools which save archives at the destination)
, and handles renames/moves properly

we can make a WebDAV server (with NodeJS) which supports modification times and hashes for files;
this way Rclone will support renames/moves;

Heroku, Vercel, Glitch, Netlifty
IBM cloud (no credit card required), Vagrant cloud
free hosts: profreehost.com, awardspace
