Comshell is a command based user interface;
command based user interfaces (using keyboard, voice, gesture) are faster, more convenient and more powerful than pointing based user interfaces (using mouse, touch, pen);
although touch interfaces can still be useful in simple limited applications; and for some special artistic applications, pen input remains the only choice;
unlike a general speech recognition process, voice commands are much simpler for a speech recognition engine to process, since it needs to match against a relatively small set of commands;
a headset with near range microphone can be used, to exclude far away sound sources; also it is better to put battery and bluetooth of the headset in a separate unit, that can be put in the pocket; this makes the headset lighter and safer;
for those who neither can use all their fingers, nor can talk, gesture based (2d) input can be implemented;

".data/keyboard.png"
missing characters can be entered like this:
, two commas --> ;
, ; followed by comma --> .
, ; followed by c --> :
, ; folloed by n --> ::
, comma followed by add followed by comma --> +
, comma followed by add followed by space --> + followed by space
, comma followed by psi followed by space --> Ïˆ followed by space
, __a --> A
, ab_cd__ followed by space --> AB_CD followed by space
"https://github.com/adereth/dactyl-keyboard"
"https://ergodox-ez.com/pages/change-it-yourself"
"https://shop.keyboard.io/"
Kinesis Advantage 2 keyboard
"https://github.com/nicinabox/lets-split-guide"
"http://www.allthingsergo.com/the-best-ergonomic-mechanical-keyboards/"

modal key_bindings;
modes (like normal mode and insert mode) must be visually distinctive;
press escape to go back to normal mode;
in normal mode we can:
, move the cursor to the next or previous characters or words
, move the cursor to the next or previous (or by entering the number directly to) lines (or table cells)
, move the cursor to the next or previous paragraphs
, start and end selection, then copy or cut
, paste
, undo, redo
, find
, enter insert mode

projects are looked for in "~/projects/" and all directories named "projects" on all disks; from this list, we can open projects (or switch to them if they are already open); also we can create new projects;
files from different disks will be in separate sections;

different views of the current project can be opened in separate tabs;
external projects (which can also be websites, pdf, etc) which are opened from inside the current project (not from projects list) will also be opened in separate tabs;

a second panel shows a tree view of the files in the project;
text files are opened in a text editor panel at the right;
directories with ".m" extension are opened in a panel at the right, showing thumbnails of the files in it;
we can go to the panel, and move between files in there (by typing their name), or create new files;

focus paragraph, ie auto scroll to reveal whole paragraph;
