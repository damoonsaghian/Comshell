Comshell is a command based user interface, to be developed in Frem programing language (a functional reactive language using move semantics, based on Rust).
"https://github.com/damoonsaghian/Frem"

command based user interfaces (using keyboard, voice, gesture) are faster, more convenient and more powerful than pointing based user interfaces (using mouse, touch, pen).
touch interfaces can still be useful in simple limited applications. and for some special artistic applications, pen input remains the only choice.
command based interactions are much simpler for a speech recognition engine to process, since it needs to match against a relatively small set of commands, unlike a general speech recognition process.
a headset with near range microphone can be used, to exclude far away sound sources. also it is better to put battery and bluetooth of the headset in a separate unit, that can be put in the pocket. this makes the headset lighter and safer.
for those that neither can use all their fingers, nor can talk, gesture based (2d) input can be implemented.

".data/keyboard.png"
missing characters can be entered using snippets:
, two commas --> .
, comma followed by ' --> "
, comma followed by ( --> [
, comma followed by add followed by comma --> +
, comma followed by add followed by space --> + followed by space
, comma followed by psi followed by space --> Ïˆ followed by space
, two apostrophes followed by a --> A
Kinesis Advantage 2 keyboard

Vim'like key'bindings
modes (like normal mode and insert mode) must be visually distinctive.
press "esc" to go back to normal mode.
in normal mode:
, create a new project or file
, show list of projects or files, move between files (previous, next), and then press space to open or raise them, or directly go to them by entering their number
, move the cursor to the next or previous (or by entering the number directly to) words, lines (or table cells), paragraphs
, start and end selection, then copy or cut
, paste
, undo, redo
, find
, enter insert mode

projects are looked for in "~/projects/" and all directories named "projects" on all disks. from this list, we can open projects (or switch to them if they are already open).

the right panel can view (synced) following text, or another place in current project.
external projects (which can also be websites, pdf, etc) which are opened from inside the current project (not from projects list) can also be shown in the right half.

a panel at the left shows a tree view of the files in the project.
text files are opened in a text editor panel at the right.
directories with ".m" extension are opened in a panel at the right, showing thumbnails of the files in it.

focus paragraph, i'e auto scroll to reveal whole paragraph.
