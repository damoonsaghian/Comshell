actually, implementing Comshell is a lot of work. we must first implement Frem language, then a graphics library, then a lot of standard u'i utilities on top of that library.
fortunately there are already great pieces of sofware made for Linux, which by putting them together, we can build a demonstration of what Comshell would look like.

Arch Linux
boot to an existing Arch Linux (installed or live) then:
  timedatectl set-ntp true
  prepare the disk (use lsblk to identify the block devices), and mount it:
    mkfs.btrfs -f /dev/sdx
    mount /dev/sdx /mnt
  pacstrap /mnt grub sed intel-ucode linux systemd-sysvcompat btrfs-progs dhcpcd pacman nano man-db logrotate sway dmenu termite adobe-source-code-pro-fonts vim uzbl zathura-pdf-poppler imv gstreamer rustup
  arch-chroot /mnt
  bootloader:
    grub-install --target=i386-pc /dev/sdx
    grub-mkconfig -o /boot/grub/grub.cfg
  systemctl enable dhcpcd.service; timedatectl set-ntp true
  automatic login:
    systemctl edit getty@tty1
      [Service]
      ExecStart=
      ExecStart=-/usr/bin/agetty --autologin root --noclear %I $TERM
  exit; reboot

use btrfs, because journaling file systems can only protect metadata at an acceptable performance, since they need to write all file system operations twice, once to the journal, and once to the file system.
copy'on'write provides consistency for both data and metadata.
also, it can offer integrity of data and metadata (using checksums), at an acceptable overhead.
in addition, c'o'w also supports the creation of cheap snapshots and clones (because it does not overwrite data in place). users can take fast online backups without the need to use any special software technique like l'v'm.

media projects (containing image, video, audio) are opened by opening a fixed number of the files in a grid of windows (using the appropriate program for each file).

https://wiki.archlinux.org/index.php/List_of_applications
https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/

vim session
https://github.com/xolox/vim-session

https://www.uzbl.org/
uzbl session
https://www.uzbl.org/wiki/session.sh
https://fanglingsu.github.io/vimb/
https://github.com/vain/lariza

https://pwmt.org/projects/zathura/
