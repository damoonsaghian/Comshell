implementing a complete GUI toolkit is a huge lot of work;
existing ones (like GTK) are single threaded;
thus we can't access GTK widgets (and data structures containing them), from inside actors;
the solution:
"https://gtk-rs.org/docs/glib/source/fn.idle_add.html"
"https://docs.rs/fragile/1.0.0/fragile/struct.Fragile.html"
"https://docs.rs/send_wrapper/0.4.0/send_wrapper/"
we deal with Gobjects by wrapping them in a Gsend;
Gsend embeds a Fragile inside, which will be created in the GTK main thread (using "idle_add"),
  and then received (and put inside the Gsend) using a channel;
Gsend.new gets a closure (instead of a Gobject value);
  the closure's return type is the type of the specific Gobject;

Arc: immutable;
Actor: mutable;

"https://gtk-rs.org/docs/gtk/"
"https://gtk-rs.org/docs/sourceview/"
"https://mmstick.github.io/gtkrs-tutorials/introduction.html"
"https://github.com/gtk-rs/examples/tree/master/src/bin"
"https://slomo.pages.freedesktop.org/rustdocs/gstreamer/gstreamer/"
"https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/tree/master/examples"
"https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/tree/master/tutorials"
"https://github.com/fengalin/media-toc"

; pkexec pacman -S gtksourceview4 webkit2gtk gst-plugins-{base,good,bad} gst-libav
poppler-glib goffice goocanvas

;sh
curl --proto '=https' -sSf -o comshell.zip https://github.com/damoonsaghian/Comshell/archive/master.zip
unzip comshell.zip -d comshell
cd comshell

cargo build --release
pkexec cp .cache/target/release/comshell /usr/local/bin/

printf '[Desktop Entry]\nName=Comshell\nExec=comshell\nIcon=computer\nType=Application' >
  ~/.config/autostart/comshell.desktop
pkexec cp ~/.config/autostart/comshell.desktop /etc/skel/.config/autostart/
pkexec cp ~/.config/autostart/comshell.desktop /usr/local/share/applications/
;

= prototype
first we can implement a prototype of Comshell using "node-gtk";
"https://github.com/romgrk/node-gtk"

https://python-gtk-3-tutorial.readthedocs.io/en/latest/layout.html
http://zetcode.com/python/gtk/
"https://bitbucket.org/tiax/gtk-textbuffer-with-undo/src/default/undobuffer.py"
  "https://stackoverflow.com/questions/76096/undo-with-gtk-textview"
"https://stackoverflow.com/questions/23433819/creating-a-simple-file-browser-using-python-and-gtktreeview"
"http://zetcode.com/gui/pygtk/advancedwidgets/"
"https://github.com/MeanEYE/Sunflower"
"https://gitlab.gnome.org/GNOME/gnome-documents/-/tree/master/src"
"https://github.com/zim-desktop-wiki/zim-desktop-wiki"
"https://github.com/UberWriter/uberwriter"
"https://github.com/jendrikseipp/rednotebook"
"https://www.archlinux.org/packages/extra/any/meld/"
"https://github.com/karlch/vimiv"
"https://gitlab.gnome.org/GNOME/pitivi"
"https://gitlab.com/Strit/griffith"
"https://www.archlinux.org/packages/community/any/lollypop/"
"https://www.archlinux.org/packages/community/any/gaupol/"
"https://www.archlinux.org/packages/community/any/eolie/"

;sh
pkexec pacman -S npm gobject-introspection gcc

npm install
pkexec mkdir -p /usr/local/share/comshell-proto
pkexec cp prototype/* /usr/local/share/comshell-proto/

printf '[Desktop Entry]\nName=Comshell proto\nExec=node /usr/local/share/comshell-proto/main.js \nIcon=computer\nType=Application' >
  ~/.config/autostart/comshell.desktop
pkexec cp ~/.config/autostart/comshell.desktop /etc/skel/.config/autostart/
pkexec cp ~/.config/autostart/comshell.desktop /usr/local/share/applications/comshell-proto.desktop
;
