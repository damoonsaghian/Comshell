actually, implementing Comshell is a lot of work. first we must implement Frem language, then a graphics library, then a lot of standard u'i utilities on top of that library.
as a demonstration, we can build a prototype, using existing tools.

"http://gtk-rs.org/docs/gtk/"
"https://github.com/gtk-rs/examples/blob/master/src/bin/basic.rs"
"https://github.com/gtk-rs/examples/blob/master/src/bin/notebook.rs"
"https://developer.gnome.org/gtk3/stable/TextWidget.html"
"https://developer.gnome.org/gtk3/stable/GtkTextBuffer.html"
"http://gtk-rs.org/docs/sourceview/"
"https://wiki.gnome.org/Projects/GtkSourceView"

see "http://relm.ml/relm-intro".
this problem is because of imperetive programming, and it leads us to the right approach, using futures and streams.
"https://tokio.rs/docs/going-deeper-futures/futures-mechanics/#adapters"
"https://docs.rs/futures/0.1.17/futures/stream/index.html"
"https://docs.rs/futures/0.1.17/futures/"
"https://github.com/antoyo/relm"
