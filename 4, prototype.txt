actually, implementing Comshell is a lot of work. first we must implement Frem language, then a graphics library, then a lot of standard u'i utilities on top of that library.
but as a demonstration, we can build a prototype, using existing tools.

GTK + Python
"https://python-gtk-3-tutorial.readthedocs.io/en/latest/"
"https://github.com/GNOME/pygobject/tree/master/examples/"
"https://github.com/ondratu/formiko"
"https://github.com/karlch/vimiv/"
"https://gitlab.gnome.org/gnumdk/eolie"

"https://lazka.github.io/pgi-docs/Gtk-3.0/"
"https://lazka.github.io/pgi-docs/GtkSource-3.0/"
"https://lazka.github.io/pgi-docs/Vte-2.91/"
"https://lazka.github.io/pgi-docs/Gio-2.0/"
"https://lazka.github.io/pgi-docs/Gdk-3.0/"
"https://lazka.github.io/pgi-docs/GdkPixbuf-2.0/"
"https://lazka.github.io/pgi-docs/Gst-1.0/"
"https://lazka.github.io/pgi-docs/WebKit2-4.0/"
"https://lazka.github.io/pgi-docs/Poppler-0.18/"
"https://lazka.github.io/pgi-docs/EvinceView-3.0/"
"https://lazka.github.io/pgi-docs/Gepub-0.5/"
"https://lazka.github.io/pgi-docs/Farstream-0.2/"
"https://lazka.github.io/pgi-docs/TelepathyGLib-0.12/"

= Debian Linux
Debian sid (can be installed directly using netboot or mini.iso)
sudo apt-get install --no-install-recommends package-name

use btrfs, because journaling file systems can only protect metadata, at an acceptable performance. since they need to write all file system operations twice, once to the journal, and once to the file system.
copy'on'write provides consistency for both data and metadata.
also, it can offer integrity of data and metadata (using checksums), at an acceptable overhead.
in addition, c'o'w also supports the creation of cheap snapshots and clones (because it does not overwrite data in place). users can take fast online backups without the need to use any special software technique like l'v'm.

fonts-noto-hinted fonts-hack
python + gir mutter
python3-gi gir1.2-gtk-3.0 gir1.2-gtksource-3.0 gir1.2-vte-2.91 gir1.2-gstreamer gir1.2-webkit2-4.0
gstreamer1.0-libav

cargo
(rust-gdb or rust-lldb, rust-doc, rust-src)

gir1.2-poppler-0.18 gir1.2-evince-3.0
gir1.2-telepathyglib-0.12 gir1.2-farstream-0.2

$ nano ~/.bashrc
  python ~/projects/Comshell/prototype/mutter.py
in mutter.py:
  execute "python ~/projects/Comshell/prototype/comshell.py"
  and when the process exits, exit from mutter.py
