command based user interfaces (using keyboard, voice, gesture) are
  faster, more convenient and more powerful
  than pointing based user interfaces (using mouse, touch, pen);
although touch interfaces can still be useful in simple limited applications;
  and for some special artistic applications, pen input remains the only choice;

touch interface may seem very convenient at first sight,
  especially if accompanied with the power of gestures;
but the problem is the form_factor: interaction at a distance is not possible;
  so one must always carry the whole system;

unlike a general speech recognition process,
  voice commands are much simpler for a speech recognition engine to process,
  since it needs to match against a relatively small set of commands;
a headset with near range microphone can be used, to exclude far away sound sources;
  also it is better to put battery and bluetooth of the headset in a separate unit,
    that can be put in the pocket;
  this makes the headset lighter and safer;
for those who neither can use all their fingers, nor can talk,
  gesture based (2d) input can be implemented;

".data/keyboard.png"
missing characters can be entered like this:
, two commas --> ;
, ; followed by comma --> .
, ; followed by c --> :
, ; folloed by n --> ::
, comma followed by add followed by comma --> +
, comma followed by add followed by space --> + followed by space
, comma followed by psi followed by space --> Ïˆ followed by space
, __a --> A
, ab_cd__ followed by space --> AB_CD followed by space
"https://github.com/adereth/dactyl-keyboard"
"https://ergodox-ez.com/pages/change-it-yourself"
"https://shop.keyboard.io/"
Kinesis Advantage 2 keyboard
"https://github.com/nicinabox/lets-split-guide"
"http://www.allthingsergo.com/the-best-ergonomic-mechanical-keyboards/"

modal key_bindings;
modes (like normal mode and insert mode) must be visually distinctive;
press escape to go back to normal mode;
in normal mode we can:
, move the cursor to the next or previous characters or words
, move the cursor to the next or previous
  (or by entering the number directly to) lines (or table cells)
, move the cursor to the next or previous paragraphs
, start and end selection, then copy or cut
, paste
, undo, redo
, find
, enter insert mode

projects are looked for in "~/workspaces/*/" and all "workspaces/*/" directories on all disks,
  and shown in lists side by side (one list per workspace);
from these lists, we can open projects (or switch to them if they are already open),
  create new projects, etc;

automatically mount storage devices when available,
  and show their "workspaces/*/" directories in seperate panes;
after unmounting a disk, the correspoding panes must be closed;

a panel at the left shows the files in the project;
text files are opened in a text editor panel at the right;
directories with ".m" extension are opened in a panel at the right,
  showing thumbnails of the files in it;
in the left panel, we can move between files, by typing their name;
  and we can copy, rename, delete, or create files in it;

other projects, web pages, pdf documents, etc,
  can be opened and accessed from links inside the main project;

focus paragraph, ie auto scroll to reveal whole paragraph;
